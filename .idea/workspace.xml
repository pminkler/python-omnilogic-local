<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="21cdfe07-fae9-47a9-b04a-c67ece54a640" name="Changes" comment="" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ComposerSettings">
    <execution />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Dockerfile" />
        <option value="Python Script" />
        <option value="HTTP Request" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitToolBoxStore">
    <option name="recentBranches">
      <RecentBranches>
        <option name="branchesForRepo">
          <list>
            <RecentBranchesForRepo>
              <option name="branches">
                <list>
                  <RecentBranch>
                    <option name="branchName" value="main" />
                    <option name="lastUsedInstant" value="1730063379" />
                  </RecentBranch>
                </list>
              </option>
              <option name="repositoryRootUrl" value="file://$PROJECT_DIR$" />
            </RecentBranchesForRepo>
          </list>
        </option>
      </RecentBranches>
    </option>
  </component>
  <component name="KubernetesApiPersistence">{}</component>
  <component name="KubernetesApiProvider">{
  &quot;isMigrated&quot;: true
}</component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 2
}</component>
  <component name="ProjectId" id="2n7kBMYFxOVCa0o9aCIHgztfr0O" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="autoscrollFromSource" value="true" />
    <option name="autoscrollToSource" value="true" />
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;Docker.Dockerfile.executor&quot;: &quot;Run&quot;,
    &quot;Docker.docker-compose.yml.omnilogic-controller: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.docker-compose.yml: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.omnilogic | Dump Configuration Data.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.omnilogic | Trigger a theme for a group.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.omnilogic_control | Dump All Configuration Data.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.omnilogic_control | Dump All Telemetry Data.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.omnilogic_control | Get All Data from OmniLogic.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.omnilogic_control | Inspect Group and Relay States.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.omnilogic_control | Set Mode to Spa.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.omnilogic_control | Set Pump to High.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.omnilogic_control | Set Spa Filter Pump Speed.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.omnilogic_control | Toggle Group State.executor&quot;: &quot;Run&quot;,
    &quot;Python.cli.executor&quot;: &quot;Run&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;git-widget-placeholder&quot;: &quot;&lt;unknown&gt;&quot;,
    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,
    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;project.structure.last.edited&quot;: &quot;Project&quot;,
    &quot;project.structure.proportion&quot;: &quot;0.0&quot;,
    &quot;project.structure.side.proportion&quot;: &quot;0.0&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  }
}</component>
  <component name="RunManager" selected="HTTP Request.omnilogic | Trigger a theme for a group">
    <configuration default="true" type="GroovyScriptRunConfiguration" factoryName="Groovy">
      <setting name="path" value="" />
      <setting name="vmparams" value="" />
      <setting name="params" value="" />
      <setting name="workDir" value="" />
      <setting name="debug" value="false" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="omnilogic | Trigger a theme for a group" type="HttpClient.HttpRequestRunConfigurationType" factoryName="HTTP Request" temporary="true" nameIsGenerated="true" path="$PROJECT_DIR$/omnilogic.http" index="7" requestIdentifier="Trigger a theme for a group" runType="Run single request">
      <method v="2" />
    </configuration>
    <configuration name="omnilogic_control | Get All Data from OmniLogic" type="HttpClient.HttpRequestRunConfigurationType" factoryName="HTTP Request" temporary="true" nameIsGenerated="true" path="$PROJECT_DIR$/omnilogic_control.http" index="4" requestIdentifier="Get All Data from OmniLogic" runType="Run single request">
      <method v="2" />
    </configuration>
    <configuration name="omnilogic_control | Set Spa Filter Pump Speed" type="HttpClient.HttpRequestRunConfigurationType" factoryName="HTTP Request" temporary="true" nameIsGenerated="true" path="$PROJECT_DIR$/omnilogic_control.http" index="2" requestIdentifier="Set Spa Filter Pump Speed" runType="Run single request">
      <method v="2" />
    </configuration>
    <configuration name="omnilogic_control | Toggle Group State" type="HttpClient.HttpRequestRunConfigurationType" factoryName="HTTP Request" temporary="true" nameIsGenerated="true" path="$PROJECT_DIR$/omnilogic_control.http" index="7" requestIdentifier="Toggle Group State" runType="Run single request">
      <method v="2" />
    </configuration>
    <configuration name="Dockerfile" type="docker-deploy" factoryName="dockerfile" temporary="true" server-name="Docker">
      <deployment type="dockerfile">
        <settings>
          <option name="containerName" value="" />
          <option name="portBindings">
            <list>
              <DockerPortBindingImpl>
                <option name="containerPort" value="5000" />
                <option name="hostPort" value="5010" />
              </DockerPortBindingImpl>
            </list>
          </option>
          <option name="sourceFilePath" value="Dockerfile" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="docker-compose.yml" temporary="true">
      <deployment type="docker-compose.yml">
        <settings />
      </deployment>
      <method v="2" />
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="docker-image" temporary="true">
      <deployment type="docker-image">
        <settings />
      </deployment>
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="HTTP Request.omnilogic | Trigger a theme for a group" />
        <item itemvalue="Docker.Dockerfile" />
        <item itemvalue="HTTP Request.omnilogic_control | Toggle Group State" />
        <item itemvalue="HTTP Request.omnilogic_control | Set Spa Filter Pump Speed" />
        <item itemvalue="HTTP Request.omnilogic_control | Get All Data from OmniLogic" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-jdk-9823dce3aa75-28b599e66164-intellij.indexing.shared.core-IU-242.23726.103" />
        <option value="bundled-js-predefined-d6986cc7102b-5c90d61e3bab-JavaScript-IU-242.23726.103" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="21cdfe07-fae9-47a9-b04a-c67ece54a640" name="Changes" comment="" />
      <created>1728331365653</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1728331365653</updated>
      <workItem from="1728331368466" duration="1742000" />
      <workItem from="1730058236761" duration="5044000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/python_omnilogic_local$cli.coverage" NAME="cli Coverage Results" MODIFIED="1730059712033" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/pyomnilogic_local" />
  </component>
</project>